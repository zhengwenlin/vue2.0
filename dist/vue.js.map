{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 将ast转换成code代码，代码长什么样子\r\n/*\r\n/* \r\n<div id=\"app\" a=1 b=2>\r\n    <span style\"=color:red\">{{name}} <a>hello</a></span>\r\n</div> \r\n _c(\r\n    'div',{id:'app',a:1,b:2}\r\n    ,_c(\r\n        'span',\r\n        {style:{color:'red'}}\r\n        ,_s(_v(name)),\r\n        _c(a,undefined,_v('hello'))\r\n        )\r\n)\r\n  三种函数：\r\n  _c 创建元素\r\n  _s stringflfy转成字符串\r\n  _v 处理文本\r\n  _c(\r\n      'div', {id:'app', a:1,b:2},\r\n      _c('span', {style: {color:\"red\"}}, _s(_v(name)), _c('a', undefined, _v('hello')))\r\n  )\r\n*/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配{{}}\r\n// 生成子元素\r\nfunction genChilren(el) {\r\n    let children = el.children \r\n    if(children){\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n}\r\nfunction gen(node){\r\n    if(node.type === 3){\r\n        //文本\r\n        //文本比较复杂了，文本中可能有1.普通文本或者2.带大括号的 {{name}}aa{{age}}哈哈\r\n        // _v(_s(name) + 'aa' + _s(age) + '哈哈')\r\n        // {{aa}} aaa {{bbb}} ccc\r\n        // 第一次：aa  index: 0   lastIndex:6\r\n        let text = node.text;\r\n        if(defaultTagRE.test(text)){\r\n            //带有{{}}的\r\n            // 全局模式下，exec方法重置正则对象的lastIndex为0\r\n            let lastIndex = defaultTagRE.lastIndex = 0; \r\n            let match; //匹配的结果\r\n            let index = 0; //index属性值\r\n            let tokens = []\r\n            //只要能匹配到{{}}，就一直循环\r\n            while(match = defaultTagRE.exec(text)) {\r\n                // match[0]匹配到的字符串 1-n 分组结果\r\n                // index match[0]第一个字符在原字符串中的索引位置\r\n                console.log(match)\r\n                index = match.index;\r\n                if(index > lastIndex){\r\n                   // index > lastIndex 说明没有匹配到，说明是普通文本\r\n                   debugger\r\n                   let a;\r\n                   tokens.push(JSON.stringify(a = text.slice(lastIndex,index)));\r\n                   console.log(match, '---')\r\n                   break;\r\n                }\r\n                \r\n                console.log('index', match.index)\r\n                console.log('lastIndex', defaultTagRE.lastIndex)\r\n                // lastIndex = index + match[0].length;\r\n            }\r\n            \r\n        }else{\r\n            // 普通文本\r\n            return `_v(${JSON.stringify(text)})`\r\n        }\r\n    }else if(node.type === 1){\r\n        //标签\r\n        return generate(node)\r\n    }\r\n}\r\n// 生成属性 [{naem:xx,value:xxx}]\r\nfunction genProps(attrs){\r\n    let str = ''\r\n    for(let i = 0; i< attrs.length; i++){\r\n       let attr = attrs[i]\r\n       if(attr.name === 'style'){\r\n         let temp = attr.value; // style=\"color:red;background:pink\"\r\n         let obj = {}\r\n         temp.split(';').forEach(s => {\r\n             let [sName,sValue] = s.split(':')\r\n             obj[sName] = sValue;\r\n         })\r\n         attr.value = obj;\r\n\r\n       }\r\n       str += `${attr.name}:${JSON.stringify(attr.value)},`  \r\n    }\r\n    return `{${str.slice(0, -1)}}` \r\n}\r\nexport function generate(el) {\r\n    let code = `_c('${el.tag}', ${\r\n        el.attrs&&el.attrs.length ? genProps(el.attrs): 'undefined'\r\n    }, ${\r\n        el.children ? (',' + genChilren(el)): ''\r\n    })`\r\n    return code;\r\n}\r\n\r\n","\r\n// 将html模板转成ast语法树,核心就是正则匹配，截取字符串\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // aa-aa \r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //aa:aa\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 可以匹配到标签名  [1]\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //[0] 标签的结束名字\r\n//    style=\"xxx\"   style='xxx'  style=xxx\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// ast语法树长什么样？\r\n/*\r\n   {\r\n       tag, // 标签名\r\n       type, //类型\r\n       attrs,// 属性\r\n       parent, // 父节点\r\n       children //孩子节点\r\n   }\r\n*/\r\n\r\n/**\r\n * \r\n    <div id=\"1\" a=\"2\">\r\n        <span style=\"color:red;\">{{name}}}</span>\r\n        <span>haha{{age}}}world</span>\r\n    </div>\r\n</div>\r\n */\r\n// 创建ast对象\r\nfunction createAstElement(tag,attrs){\r\n    return {\r\n        tag,\r\n        type:1,\r\n        attrs,\r\n        parent: null,\r\n        children: []\r\n    }\r\n}\r\n//这个函数最终是要得到一个ast语法树\r\nexport function parseHTML(html) {\r\n    // ast的根，默认是null\r\n    let root = null;\r\n    let stack = [] // 使用栈结构存放ast元素，记录父子关系\r\n    let currentParent = null; //当前的父元素\r\n    //处理开始标签的\r\n    function start(tagName, attrs){\r\n        let element = createAstElement(tagName,attrs)\r\n        if(!root){\r\n           root = element\r\n        }\r\n        stack.push(element)\r\n        currentParent = element;\r\n\r\n    }\r\n    //处理结束标签的\r\n    function end(tagName){\r\n        // 这里用来处理父子关系\r\n        let element = stack.pop() //取出最后一个\r\n        currentParent = stack[stack.length - 1] // 父级就是前一个元素\r\n        if(currentParent){\r\n            element.parent = currentParent;\r\n            currentParent.children.push(element)\r\n        }\r\n    }\r\n    //处理文本的\r\n    function charts(text){\r\n      text = text.replace(/\\s/g, '')\r\n      currentParent.children.push({\r\n          type: 3,\r\n          text\r\n      })\r\n    }\r\n    // 走n步\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    // 解析标签\r\n    function parseStartTag() {\r\n        let match = html.match(startTagOpen)\r\n        if (match) {\r\n            advance(match[0].length)\r\n            let matched = {\r\n                tagName: match[1],\r\n                attrs: []\r\n            }\r\n            //解析属性\r\n            //属性可能有多个，属性的位置 >前的\r\n            let end, attr\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                matched.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n                return matched;\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    while (html) {\r\n        // indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。\r\n        let textEnd = html.indexOf('<')\r\n        // 如果textEnd == 0的话，说明是标签； >0的话，说明是文本\r\n        if (textEnd === 0) {\r\n            //开始标签\r\n            let startTagMatch = parseStartTag()\r\n            if(startTagMatch){\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n            }\r\n            //结束标签\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n            }\r\n        }\r\n\r\n        // 匹配文本 从0-匹配到>的位置都是文本的部分\r\n        let text;\r\n        if (textEnd > 0) {\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            charts(text)\r\n        }\r\n    }\r\n    return root;\r\n}","// 将模板编译成render函数\r\n\r\nimport { generate } from \"./generate\";\r\nimport { parseHTML } from \"./parse\";\r\n\r\n\r\nexport function compileToFunctions(template) {\r\n    // 将html模板转成ast语法树\r\n    let ast = parseHTML(template)\r\n\r\n    // 将ast 转换成code\r\n    let code = generate(ast)\r\n    console.log(code, 'code')\r\n}","// 数据劫持，数组的处理逻辑，主要是方法的重写\r\n\r\n// 老的数组的方法\r\nlet oldArrayMethods = Array.prototype;\r\n\r\n// 这7个方法都是能修改原数组的方法\r\nconst methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'splice',\r\n    'reverse',\r\n    'sort'\r\n]\r\n/**\r\n * 相当于\r\n * function create(proto){\r\n *   let Fn = function(){}\r\n *   Fn.prototype = proto\r\n *   return new Fn()\r\n * }\r\n * proto.__proto__ = Array.prototype 相当于多了一层\r\n */\r\nconst arrayMethods = Object.create(Array.prototype)\r\n\r\n// 重写数组的方法\r\n// 删除元素的方法不管，增加元素的方法，如果元素是对象，进行监测\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function(...args) {\r\n        // 调用老的方法\r\n        let result = oldArrayMethods[method].call(this, ...args)\r\n        let inserted;\r\n        let ob = this.__ob__ // Observer的实例\r\n        // 自己的逻辑\r\n        switch(method){\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':  // splice(0, 1, xxx)\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        // 如果有插入的元素\r\n        if(inserted) {\r\n           // inserted是一个数组，数组中可能有插入的对象元素，监测数组\r\n           // 检测数组可以调用Observer的 observeArray 方法，但是需要得到Observer的实例\r\n           // 这里的this是什么，数组调用的方法，this指的是数组数据，可以将Observer实例挂载到this上\r\n           ob.observeArray(inserted)\r\n        }\r\n        return result;\r\n        \r\n    }\r\n})\r\n// 导出重写后的方法\r\nexport default arrayMethods;","import arrayMethods from \"./array\"\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        //这样写发现死循环了 Maximum call stack size exceeded\r\n        //因为data多了一个__ob__属性，walk的时候，循环data，ob是一个对象，又new Observer，又走walk，又\r\n        //有一个__ob__，就死循环了\r\n        //data.__ob__ = this; // 将this挂载到数据上\r\n        // 将__ob__变成不可枚举即可,使用Object.defineProperty\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false, //不能枚举\r\n            configurable: false //不能删除\r\n        })\r\n\r\n        // 如果数据是一个数组的话，默认会将数组的每一个元素都设置了get和set，性能差\r\n        // 默认数组单独处理\r\n        if (Array.isArray(data)) {\r\n            // 处理数组的逻辑 这里的data是数组，有数组的方法\r\n            // 1. 改写数组的方法（能修改原数组的方法）,因为如果原数组改变了，也应该触发视图更新\r\n            // 通过重写原型方法的方式 data.__proto__ = arrayMethods\r\n            Object.setPrototypeOf(data, arrayMethods)\r\n            // 2. 如果元素是对象，进行监测，如果是普通值，不管\r\n            this.observeArray(data)\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n\r\n    // 观测数据，走一步\r\n    walk(data) {\r\n        // value是对象\r\n        Object.keys(data).forEach(key => {\r\n            // 定义响应式数据 obj  key  value\r\n            defineReactive(data, key, data[key])\r\n        })\r\n    }\r\n\r\n    // 数组元素监测\r\n    observeArray(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            observe(data[i])\r\n        }\r\n    }\r\n}\r\n\r\n// 将一个对象定义成响应式（Object.defineProperty）\r\nexport function defineReactive(obj, key, value) {\r\n    // value可能是对象\r\n    observe(value)\r\n    Object.defineProperty(obj, key, {\r\n        get() {\r\n            return value;\r\n        },\r\n        set(newVal) {\r\n            if (newVal === value) {\r\n                return;\r\n            }\r\n            // 设置的值可能是对象\r\n            observe(newVal)\r\n            value = newVal;\r\n        }\r\n    })\r\n}\r\n\r\n// 观测数据，数据劫持\r\nexport function observe(data) {\r\n    // 如果不是对象的话，不管\r\n    if (typeof data !== 'object' || data === null) {\r\n        return;\r\n    }\r\n    // 如果数据有__ob__属性，说明被监测过了，不用再次监测\r\n    if (data.__ob__) {\r\n        return;\r\n    }\r\n    // 使用Observer类观测\r\n    return new Observer(data)\r\n\r\n}","import { observe } from \"./observer/index.js\";\r\n\r\n// 用于初始化状态，状态由很多种 props data methods computed watch\r\nexport function initState(vm) {\r\n  let options = vm.$options\r\n\r\n  // 初始化数据，数据劫持\r\n  if(options.data){\r\n      initData(vm)\r\n  }\r\n}\r\n\r\n// 将vm._data的数据代理的vm实例上，用户体验好\r\nfunction proxy(target, source, key){\r\n  Object.defineProperty(target, key, {\r\n    get(){\r\n      return target[source][key]\r\n    },\r\n    set(newValue){\r\n      target[source][key] = newValue;\r\n    }\r\n  })\r\n}\r\n\r\n// 初始化data数据\r\nfunction initData(vm) {\r\n    // 初始化数据，就是对数据的劫持\r\n    let data = vm.$options.data\r\n    // vm._data中保存着数据\r\n    data = vm._data = typeof data === 'function' ? data.call(vm): data;\r\n\r\n    // 用户看数据只能在vm._data上看，可以将vm._data上的数据代理到vm实例上，通过vm.xx访问数据\r\n    for(let key in data){\r\n       proxy(vm, '_data', key)\r\n    }\r\n\r\n    // 数据劫持，观测数据 data和vm._data是同一个引用\r\n    observe(data)\r\n\r\n}","import { compileToFunctions } from \"./compiler/index.js\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        \r\n        let vm = this;\r\n        vm.$options = options; // vm.$options保存的是用户传入的选项\r\n\r\n        //初始化状态有很多\r\n        initState(vm)\r\n\r\n\r\n        //编译模板，挂载到页面\r\n        if(vm.$options.el){\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        let options = vm.$options;\r\n        \r\n        // 获取el的dom节点\r\n        el = typeof el === 'string' ? document.querySelector(el) : el;\r\n        // vm.$options.el是真实dom节点\r\n        vm.$options.el = el;\r\n\r\n        // 查找模板的顺序：\r\n        // 如果有render函数，直接使用render函数\r\n        // 没有render  看看有没有template\r\n        // 没有template 就使用外部模板\r\n\r\n        // 使用模板编译成render函数\r\n        if(!options.render){\r\n            let template = options.template\r\n            if(!template){\r\n                template = el.outerHTML // 外部模板\r\n            }\r\n\r\n            //拿到模板，使用模板编译成render函数\r\n            const render =  compileToFunctions(template)\r\n            options.render = render;\r\n        }\r\n\r\n    }\r\n}","import { initMixin } from \"./init\";\r\n\r\n// Vue的入口文件\r\nfunction Vue (options){\r\n  this._init(options)  \r\n}\r\n\r\n// 混入的初始化方法\r\n// 原型模式，将原型的方法拆分到不同的文件中\r\ninitMixin(Vue)\r\n\r\n\r\nexport default Vue;"],"names":["defaultTagRE","genChilren","el","children","map","child","gen","join","node","type","text","test","lastIndex","match","index","tokens","exec","console","log","a","push","JSON","stringify","slice","generate","genProps","attrs","str","i","length","attr","name","temp","value","obj","split","forEach","s","sName","sValue","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createAstElement","parent","parseHTML","html","root","stack","currentParent","start","tagName","element","end","pop","charts","replace","advance","n","substring","parseStartTag","matched","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunctions","template","ast","oldArrayMethods","Array","prototype","methods","arrayMethods","Object","create","method","args","result","call","inserted","ob","__ob__","observeArray","Observer","data","defineProperty","enumerable","configurable","isArray","setPrototypeOf","walk","keys","key","defineReactive","observe","get","set","newVal","initState","vm","options","$options","initData","proxy","target","source","newValue","_data","initMixin","Vue","_init","$mount","document","querySelector","render","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAMA,YAAY,GAAG,0BAArB;EACA;;EACA,SAASC,UAAT,CAAoBC,EAApB,EAAwB;EACpB,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;;EACA,MAAGA,QAAH,EAAY;EACR,WAAOA,QAAQ,CAACC,GAAT,CAAa,UAAAC,KAAK;EAAA,aAAIC,GAAG,CAACD,KAAD,CAAP;EAAA,KAAlB,EAAkCE,IAAlC,CAAuC,GAAvC,CAAP;EACH;EACJ;;EACD,SAASD,GAAT,CAAaE,IAAb,EAAkB;EACd,MAAGA,IAAI,CAACC,IAAL,KAAc,CAAjB,EAAmB;EACf;EACA;EACA;EACA;EACA;EACA,QAAIC,IAAI,GAAGF,IAAI,CAACE,IAAhB;;EACA,QAAGV,YAAY,CAACW,IAAb,CAAkBD,IAAlB,CAAH,EAA2B;EACvB;EACA;EACA,UAAIE,SAAS,GAAGZ,YAAY,CAACY,SAAb,GAAyB,CAAzC;EACA,UAAIC,KAAJ,CAJuB;;EAKvB,UAAIC,KAAK,GAAG,CAAZ,CALuB;;EAMvB,UAAIC,MAAM,GAAG,EAAb,CANuB;;EAQvB,aAAMF,KAAK,GAAGb,YAAY,CAACgB,IAAb,CAAkBN,IAAlB,CAAd,EAAuC;EACnC;EACA;EACAO,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;EACAC,QAAAA,KAAK,GAAGD,KAAK,CAACC,KAAd;;EACA,YAAGA,KAAK,GAAGF,SAAX,EAAqB;EAClB;EACA;EACA,cAAIO,CAAC,SAAL;EACAJ,UAAAA,MAAM,CAACK,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeH,CAAC,GAAGT,IAAI,CAACa,KAAL,CAAWX,SAAX,EAAqBE,KAArB,CAAnB,CAAZ;EACAG,UAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmB,KAAnB;EACA;EACF;;EAEDI,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAAK,CAACC,KAA3B;EACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBlB,YAAY,CAACY,SAAtC,EAfmC;EAiBtC;EAEJ,KA3BD,MA2BK;EACD;EACA,0BAAaS,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAb;EACH;EACJ,GAtCD,MAsCM,IAAGF,IAAI,CAACC,IAAL,KAAc,CAAjB,EAAmB;EACrB;EACA,WAAOe,QAAQ,CAAChB,IAAD,CAAf;EACH;EACJ;;;EAED,SAASiB,QAAT,CAAkBC,KAAlB,EAAwB;EACpB,MAAIC,GAAG,GAAG,EAAV;;EACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEF,KAAK,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;EACjC,QAAIE,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAhB;;EACA,QAAGE,IAAI,CAACC,IAAL,KAAc,OAAjB,EAAyB;EAAA;EACvB,YAAIC,IAAI,GAAGF,IAAI,CAACG,KAAhB,CADuB;;EAEvB,YAAIC,GAAG,GAAG,EAAV;EACAF,QAAAA,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,OAAhB,CAAwB,UAAAC,CAAC,EAAI;EAAA,yBACJA,CAAC,CAACF,KAAF,CAAQ,GAAR,CADI;EAAA;EAAA,cACpBG,KADoB;EAAA,cACdC,MADc;;EAEzBL,UAAAA,GAAG,CAACI,KAAD,CAAH,GAAaC,MAAb;EACH,SAHD;EAIAT,QAAAA,IAAI,CAACG,KAAL,GAAaC,GAAb;EAPuB;EASxB;;EACDP,IAAAA,GAAG,cAAOG,IAAI,CAACC,IAAZ,cAAoBV,IAAI,CAACC,SAAL,CAAeQ,IAAI,CAACG,KAApB,CAApB,MAAH;EACF;;EACD,oBAAWN,GAAG,CAACJ,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAX;EACH;;EACM,SAASC,QAAT,CAAkBtB,EAAlB,EAAsB;EACzB,MAAIsC,IAAI,iBAAUtC,EAAE,CAACuC,GAAb,gBACJvC,EAAE,CAACwB,KAAH,IAAUxB,EAAE,CAACwB,KAAH,CAASG,MAAnB,GAA4BJ,QAAQ,CAACvB,EAAE,CAACwB,KAAJ,CAApC,GAAgD,WAD5C,eAGJxB,EAAE,CAACC,QAAH,GAAe,MAAMF,UAAU,CAACC,EAAD,CAA/B,GAAsC,EAHlC,MAAR;EAKA,SAAOsC,IAAP;EACH;;ECrGD;EAEA,IAAME,MAAM,iCAAZ;;EACA,IAAMC,YAAY,iBAAUD,MAAV,kBAAwBA,MAAxB,MAAlB;;EACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,YAAf;EACA;;EACA,IAAMI,SAAS,GAAG,2EAAlB;EACA,IAAMC,aAAa,GAAG,YAAtB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,SAASC,gBAAT,CAA0BR,GAA1B,EAA8Bf,KAA9B,EAAoC;EAChC,SAAO;EACHe,IAAAA,GAAG,EAAHA,GADG;EAEHhC,IAAAA,IAAI,EAAC,CAFF;EAGHiB,IAAAA,KAAK,EAALA,KAHG;EAIHwB,IAAAA,MAAM,EAAE,IAJL;EAKH/C,IAAAA,QAAQ,EAAE;EALP,GAAP;EAOH;;;EAEM,SAASgD,SAAT,CAAmBC,IAAnB,EAAyB;EAC5B;EACA,MAAIC,IAAI,GAAG,IAAX;EACA,MAAIC,KAAK,GAAG,EAAZ,CAH4B;;EAI5B,MAAIC,aAAa,GAAG,IAApB,CAJ4B;EAK5B;;EACA,WAASC,KAAT,CAAeC,OAAf,EAAwB/B,KAAxB,EAA8B;EAC1B,QAAIgC,OAAO,GAAGT,gBAAgB,CAACQ,OAAD,EAAS/B,KAAT,CAA9B;;EACA,QAAG,CAAC2B,IAAJ,EAAS;EACNA,MAAAA,IAAI,GAAGK,OAAP;EACF;;EACDJ,IAAAA,KAAK,CAAClC,IAAN,CAAWsC,OAAX;EACAH,IAAAA,aAAa,GAAGG,OAAhB;EAEH,GAd2B;;;EAgB5B,WAASC,GAAT,CAAaF,OAAb,EAAqB;EACjB;EACA,QAAIC,OAAO,GAAGJ,KAAK,CAACM,GAAN,EAAd,CAFiB;;EAGjBL,IAAAA,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACzB,MAAN,GAAe,CAAhB,CAArB,CAHiB;;EAIjB,QAAG0B,aAAH,EAAiB;EACbG,MAAAA,OAAO,CAACR,MAAR,GAAiBK,aAAjB;EACAA,MAAAA,aAAa,CAACpD,QAAd,CAAuBiB,IAAvB,CAA4BsC,OAA5B;EACH;EACJ,GAxB2B;;;EA0B5B,WAASG,MAAT,CAAgBnD,IAAhB,EAAqB;EACnBA,IAAAA,IAAI,GAAGA,IAAI,CAACoD,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;EACAP,IAAAA,aAAa,CAACpD,QAAd,CAAuBiB,IAAvB,CAA4B;EACxBX,MAAAA,IAAI,EAAE,CADkB;EAExBC,MAAAA,IAAI,EAAJA;EAFwB,KAA5B;EAID,GAhC2B;;;EAkC5B,WAASqD,OAAT,CAAiBC,CAAjB,EAAoB;EAChBZ,IAAAA,IAAI,GAAGA,IAAI,CAACa,SAAL,CAAeD,CAAf,CAAP;EACH,GApC2B;;;EAsC5B,WAASE,aAAT,GAAyB;EACrB,QAAIrD,KAAK,GAAGuC,IAAI,CAACvC,KAAL,CAAW+B,YAAX,CAAZ;;EACA,QAAI/B,KAAJ,EAAW;EACPkD,MAAAA,OAAO,CAAClD,KAAK,CAAC,CAAD,CAAL,CAASgB,MAAV,CAAP;EACA,UAAIsC,OAAO,GAAG;EACVV,QAAAA,OAAO,EAAE5C,KAAK,CAAC,CAAD,CADJ;EAEVa,QAAAA,KAAK,EAAE;EAFG,OAAd,CAFO;EAOP;;EACA,UAAIiC,IAAJ,EAAS7B,IAAT;;EACA,aAAO,EAAE6B,IAAG,GAAGP,IAAI,CAACvC,KAAL,CAAWmC,aAAX,CAAR,MAAuClB,IAAI,GAAGsB,IAAI,CAACvC,KAAL,CAAWkC,SAAX,CAA9C,CAAP,EAA6E;EACzEgB,QAAAA,OAAO,CAACjC,IAAI,CAAC,CAAD,CAAJ,CAAQD,MAAT,CAAP;EACAsC,QAAAA,OAAO,CAACzC,KAAR,CAAcN,IAAd,CAAmB;EAAEW,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAZ;EAAiBG,UAAAA,KAAK,EAAEH,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;EAAlD,SAAnB;EACH;;EACD,UAAI6B,IAAJ,EAAS;EACLI,QAAAA,OAAO,CAACJ,IAAG,CAAC,CAAD,CAAH,CAAO9B,MAAR,CAAP;EACA,eAAOsC,OAAP;EACH;EAEJ;EACJ;;EAED,SAAOf,IAAP,EAAa;EACT;EACA,QAAIgB,OAAO,GAAGhB,IAAI,CAACiB,OAAL,CAAa,GAAb,CAAd,CAFS;;EAIT,QAAID,OAAO,KAAK,CAAhB,EAAmB;EACf;EACA,UAAIE,aAAa,GAAGJ,aAAa,EAAjC;;EACA,UAAGI,aAAH,EAAiB;EACbd,QAAAA,KAAK,CAACc,aAAa,CAACb,OAAf,EAAwBa,aAAa,CAAC5C,KAAtC,CAAL;EACH,OALc;;;EAOf,UAAI6C,WAAW,GAAGnB,IAAI,CAACvC,KAAL,CAAWiC,MAAX,CAAlB;;EACA,UAAIyB,WAAJ,EAAiB;EACbR,QAAAA,OAAO,CAACQ,WAAW,CAAC,CAAD,CAAX,CAAe1C,MAAhB,CAAP;EACA8B,QAAAA,GAAG,CAACY,WAAW,CAAC,CAAD,CAAZ,CAAH;EACH;EACJ,KAhBQ;;;EAmBT,QAAI7D,IAAI,SAAR;;EACA,QAAI0D,OAAO,GAAG,CAAd,EAAiB;EACb1D,MAAAA,IAAI,GAAG0C,IAAI,CAACa,SAAL,CAAe,CAAf,EAAkBG,OAAlB,CAAP;EACH;;EACD,QAAI1D,IAAJ,EAAU;EACNqD,MAAAA,OAAO,CAACrD,IAAI,CAACmB,MAAN,CAAP;EACAgC,MAAAA,MAAM,CAACnD,IAAD,CAAN;EACH;EACJ;;EACD,SAAO2C,IAAP;EACH;;EClID;EAMO,SAASmB,kBAAT,CAA4BC,QAA5B,EAAsC;EACzC;EACA,MAAIC,GAAG,GAAGvB,SAAS,CAACsB,QAAD,CAAnB,CAFyC;;EAKzC,MAAIjC,IAAI,GAAGhB,QAAQ,CAACkD,GAAD,CAAnB;EACAzD,EAAAA,OAAO,CAACC,GAAR,CAAYsB,IAAZ,EAAkB,MAAlB;EACH;;ECbD;EAEA;EACA,IAAImC,eAAe,GAAGC,KAAK,CAACC,SAA5B;;EAGA,IAAMC,OAAO,GAAG,CACZ,MADY,EAEZ,KAFY,EAGZ,OAHY,EAIZ,SAJY,EAKZ,QALY,EAMZ,SANY,EAOZ,MAPY,CAAhB;EASA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,IAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,KAAK,CAACC,SAApB,CAArB;EAGA;;EACAC,OAAO,CAAC1C,OAAR,CAAgB,UAAA8C,MAAM,EAAI;EACtBH,EAAAA,YAAY,CAACG,MAAD,CAAZ,GAAuB,YAAkB;EAAA;;EAAA,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EACrC;EACA,QAAIC,MAAM,GAAG,yBAAAT,eAAe,CAACO,MAAD,CAAf,EAAwBG,IAAxB,+BAA6B,IAA7B,SAAsCF,IAAtC,EAAb;;EACA,QAAIG,QAAJ;EACA,QAAIC,EAAE,GAAG,KAAKC,MAAd,CAJqC;EAKrC;;EACA,YAAON,MAAP;EACI,WAAK,MAAL;EACA,WAAK,SAAL;EACII,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACJ,WAAK,QAAL;EAAgB;EACZG,QAAAA,QAAQ,GAAGH,IAAI,CAAC5D,KAAL,CAAW,CAAX,CAAX;EANR,KANqC;;;EAiBrC,QAAG+D,QAAH,EAAa;EACV;EACA;EACA;EACAC,MAAAA,EAAE,CAACE,YAAH,CAAgBH,QAAhB;EACF;;EACD,WAAOF,MAAP;EAEH,GAzBD;EA0BH,CA3BD;;MC1BMM;EACF,oBAAYC,IAAZ,EAAkB;EAAA;;EACd;EACA;EACA;EACA;EACA;EACAX,IAAAA,MAAM,CAACY,cAAP,CAAsBD,IAAtB,EAA4B,QAA5B,EAAsC;EAClC1D,MAAAA,KAAK,EAAE,IAD2B;EAElC4D,MAAAA,UAAU,EAAE,KAFsB;EAEf;EACnBC,MAAAA,YAAY,EAAE,KAHoB;;EAAA,KAAtC,EANc;EAad;;EACA,QAAIlB,KAAK,CAACmB,OAAN,CAAcJ,IAAd,CAAJ,EAAyB;EACrB;EACA;EACA;EACAX,MAAAA,MAAM,CAACgB,cAAP,CAAsBL,IAAtB,EAA4BZ,YAA5B,EAJqB;;EAMrB,WAAKU,YAAL,CAAkBE,IAAlB;EACH,KAPD,MAOO;EACH,WAAKM,IAAL,CAAUN,IAAV;EACH;EACJ;;;;;2BAGIA,MAAM;EACP;EACAX,MAAAA,MAAM,CAACkB,IAAP,CAAYP,IAAZ,EAAkBvD,OAAlB,CAA0B,UAAA+D,GAAG,EAAI;EAC7B;EACAC,QAAAA,cAAc,CAACT,IAAD,EAAOQ,GAAP,EAAYR,IAAI,CAACQ,GAAD,CAAhB,CAAd;EACH,OAHD;EAIH;;;;mCAGYR,MAAM;EACf,WAAK,IAAI/D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+D,IAAI,CAAC9D,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EAClCyE,QAAAA,OAAO,CAACV,IAAI,CAAC/D,CAAD,CAAL,CAAP;EACH;EACJ;;;;;;;EAIE,SAASwE,cAAT,CAAwBlE,GAAxB,EAA6BiE,GAA7B,EAAkClE,KAAlC,EAAyC;EAC5C;EACAoE,EAAAA,OAAO,CAACpE,KAAD,CAAP;EACA+C,EAAAA,MAAM,CAACY,cAAP,CAAsB1D,GAAtB,EAA2BiE,GAA3B,EAAgC;EAC5BG,IAAAA,GAD4B,iBACtB;EACF,aAAOrE,KAAP;EACH,KAH2B;EAI5BsE,IAAAA,GAJ4B,eAIxBC,MAJwB,EAIhB;EACR,UAAIA,MAAM,KAAKvE,KAAf,EAAsB;EAClB;EACH,OAHO;;;EAKRoE,MAAAA,OAAO,CAACG,MAAD,CAAP;EACAvE,MAAAA,KAAK,GAAGuE,MAAR;EACH;EAX2B,GAAhC;EAaH;;EAGM,SAASH,OAAT,CAAiBV,IAAjB,EAAuB;EAC1B;EACA,MAAI,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;EAC3C;EACH,GAJyB;;;EAM1B,MAAIA,IAAI,CAACH,MAAT,EAAiB;EACb;EACH,GARyB;;;EAU1B,SAAO,IAAIE,QAAJ,CAAaC,IAAb,CAAP;EAEH;;EC3EM,SAASc,SAAT,CAAmBC,EAAnB,EAAuB;EAC5B,MAAIC,OAAO,GAAGD,EAAE,CAACE,QAAjB,CAD4B;;EAI5B,MAAGD,OAAO,CAAChB,IAAX,EAAgB;EACZkB,IAAAA,QAAQ,CAACH,EAAD,CAAR;EACH;EACF;;EAGD,SAASI,KAAT,CAAeC,MAAf,EAAuBC,MAAvB,EAA+Bb,GAA/B,EAAmC;EACjCnB,EAAAA,MAAM,CAACY,cAAP,CAAsBmB,MAAtB,EAA8BZ,GAA9B,EAAmC;EACjCG,IAAAA,GADiC,iBAC5B;EACH,aAAOS,MAAM,CAACC,MAAD,CAAN,CAAeb,GAAf,CAAP;EACD,KAHgC;EAIjCI,IAAAA,GAJiC,eAI7BU,QAJ6B,EAIpB;EACXF,MAAAA,MAAM,CAACC,MAAD,CAAN,CAAeb,GAAf,IAAsBc,QAAtB;EACD;EANgC,GAAnC;EAQD;;;EAGD,SAASJ,QAAT,CAAkBH,EAAlB,EAAsB;EAClB;EACA,MAAIf,IAAI,GAAGe,EAAE,CAACE,QAAH,CAAYjB,IAAvB,CAFkB;;EAIlBA,EAAAA,IAAI,GAAGe,EAAE,CAACQ,KAAH,GAAW,OAAOvB,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACN,IAAL,CAAUqB,EAAV,CAA7B,GAA4Cf,IAA9D,CAJkB;;EAOlB,OAAI,IAAIQ,GAAR,IAAeR,IAAf,EAAoB;EACjBmB,IAAAA,KAAK,CAACJ,EAAD,EAAK,OAAL,EAAcP,GAAd,CAAL;EACF,GATiB;;;EAYlBE,EAAAA,OAAO,CAACV,IAAD,CAAP;EAEH;;ECpCM,SAASwB,SAAT,CAAmBC,GAAnB,EAAwB;EAC3BA,EAAAA,GAAG,CAACvC,SAAJ,CAAcwC,KAAd,GAAsB,UAAUV,OAAV,EAAmB;EAErC,QAAID,EAAE,GAAG,IAAT;EACAA,IAAAA,EAAE,CAACE,QAAH,GAAcD,OAAd,CAHqC;EAKrC;;EACAF,IAAAA,SAAS,CAACC,EAAD,CAAT,CANqC;;EAUrC,QAAGA,EAAE,CAACE,QAAH,CAAY1G,EAAf,EAAkB;EACdwG,MAAAA,EAAE,CAACY,MAAH,CAAUZ,EAAE,CAACE,QAAH,CAAY1G,EAAtB;EACH;EACJ,GAbD;;EAeAkH,EAAAA,GAAG,CAACvC,SAAJ,CAAcyC,MAAd,GAAuB,UAASpH,EAAT,EAAa;EAChC,QAAMwG,EAAE,GAAG,IAAX;EACA,QAAIC,OAAO,GAAGD,EAAE,CAACE,QAAjB,CAFgC;;EAKhC1G,IAAAA,EAAE,GAAG,OAAOA,EAAP,KAAc,QAAd,GAAyBqH,QAAQ,CAACC,aAAT,CAAuBtH,EAAvB,CAAzB,GAAsDA,EAA3D,CALgC;;EAOhCwG,IAAAA,EAAE,CAACE,QAAH,CAAY1G,EAAZ,GAAiBA,EAAjB,CAPgC;EAUhC;EACA;EACA;EAEA;;EACA,QAAG,CAACyG,OAAO,CAACc,MAAZ,EAAmB;EACf,UAAIhD,QAAQ,GAAGkC,OAAO,CAAClC,QAAvB;;EACA,UAAG,CAACA,QAAJ,EAAa;EACTA,QAAAA,QAAQ,GAAGvE,EAAE,CAACwH,SAAd,CADS;EAEZ,OAJc;;;EAOf,UAAMD,MAAM,GAAIjD,kBAAkB,CAACC,QAAD,CAAlC;EACAkC,MAAAA,OAAO,CAACc,MAAR,GAAiBA,MAAjB;EACH;EAEJ,GA1BD;EA2BH;;EC3CD,SAASL,GAAT,CAAcT,OAAd,EAAsB;EACpB,OAAKU,KAAL,CAAWV,OAAX;EACD;EAGD;;;EACAQ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}