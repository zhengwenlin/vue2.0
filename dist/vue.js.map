{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["\r\n// 将html模板转成ast语法树,核心就是正则匹配，截取字符串\r\n// ast语法树长什么样？\r\n/*\r\n   {\r\n       tag, // 标签名\r\n       type, //类型\r\n       attrs,// 属性\r\n       parent, // 父节点\r\n       children //孩子节点\r\n   }\r\n*/\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // aa-aa \r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //aa:aa\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 可以匹配到标签名  [1]\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //[0] 标签的结束名字\r\n//    style=\"xxx\"   style='xxx'  style=xxx\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n\r\n/**\r\n * \r\n<div id=\"app\">\r\n    <div id=\"1\" a=\"2\">\r\n        <span style=\"color:red;\">{{name}}}</span>\r\n        <span>haha{{age}}}world</span>\r\n    </div>\r\n</div>\r\n */\r\nexport function parseHTML(html) {\r\n    // ast的根，默认是null\r\n    let root = null;\r\n\r\n    // 走n步\r\n    function advance(n){\r\n        html = html.substring(n)\r\n    }\r\n    while(html){\r\n       // indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。\r\n       let textEnd = html.indexOf('<')\r\n       // 如果textEnd == 0的话，说明是标签； >0的话，说明是文本\r\n       if(textEnd === 0){\r\n           // 解析标签\r\n\r\n           let startTageMatch = html.match(startTagOpen)\r\n           console.log(startTageMatch, 'startTageMatch')\r\n           if(startTageMatch){\r\n               //开始标签 match[0]是匹配到的字符串<div   match[1]是标签名 div\r\n\r\n               advance(startTageMatch[0].length)\r\n               if(!root){\r\n                   root = {\r\n                       tag: startTageMatch[1],\r\n                       type: 1\r\n                   }\r\n               }\r\n               \r\n           }\r\n           break;\r\n\r\n       }\r\n    }\r\n}","// 将模板编译成render函数\r\n\r\nimport { parseHTML } from \"./parse\";\r\n\r\n\r\nexport function compileToFunctions(template) {\r\n    // 将html模板转成ast语法树\r\n    let ast = parseHTML(template)\r\n}","// 数据劫持，数组的处理逻辑，主要是方法的重写\r\n\r\n// 老的数组的方法\r\nlet oldArrayMethods = Array.prototype;\r\n\r\n// 这7个方法都是能修改原数组的方法\r\nconst methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'splice',\r\n    'reverse',\r\n    'sort'\r\n]\r\n/**\r\n * 相当于\r\n * function create(proto){\r\n *   let Fn = function(){}\r\n *   Fn.prototype = proto\r\n *   return new Fn()\r\n * }\r\n * proto.__proto__ = Array.prototype 相当于多了一层\r\n */\r\nconst arrayMethods = Object.create(Array.prototype)\r\n\r\n// 重写数组的方法\r\n// 删除元素的方法不管，增加元素的方法，如果元素是对象，进行监测\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function(...args) {\r\n        // 调用老的方法\r\n        let result = oldArrayMethods[method].call(this, ...args)\r\n        let inserted;\r\n        let ob = this.__ob__ // Observer的实例\r\n        // 自己的逻辑\r\n        switch(method){\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':  // splice(0, 1, xxx)\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        // 如果有插入的元素\r\n        if(inserted) {\r\n           // inserted是一个数组，数组中可能有插入的对象元素，监测数组\r\n           // 检测数组可以调用Observer的 observeArray 方法，但是需要得到Observer的实例\r\n           // 这里的this是什么，数组调用的方法，this指的是数组数据，可以将Observer实例挂载到this上\r\n           ob.observeArray(inserted)\r\n        }\r\n        return result;\r\n        \r\n    }\r\n})\r\n// 导出重写后的方法\r\nexport default arrayMethods;","import arrayMethods from \"./array\"\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        //这样写发现死循环了 Maximum call stack size exceeded\r\n        //因为data多了一个__ob__属性，walk的时候，循环data，ob是一个对象，又new Observer，又走walk，又\r\n        //有一个__ob__，就死循环了\r\n        //data.__ob__ = this; // 将this挂载到数据上\r\n        // 将__ob__变成不可枚举即可,使用Object.defineProperty\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false, //不能枚举\r\n            configurable: false //不能删除\r\n        })\r\n\r\n        // 如果数据是一个数组的话，默认会将数组的每一个元素都设置了get和set，性能差\r\n        // 默认数组单独处理\r\n        if (Array.isArray(data)) {\r\n            // 处理数组的逻辑 这里的data是数组，有数组的方法\r\n            // 1. 改写数组的方法（能修改原数组的方法）,因为如果原数组改变了，也应该触发视图更新\r\n            // 通过重写原型方法的方式 data.__proto__ = arrayMethods\r\n            Object.setPrototypeOf(data, arrayMethods)\r\n            // 2. 如果元素是对象，进行监测，如果是普通值，不管\r\n            this.observeArray(data)\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n\r\n    // 观测数据，走一步\r\n    walk(data) {\r\n        // value是对象\r\n        Object.keys(data).forEach(key => {\r\n            // 定义响应式数据 obj  key  value\r\n            defineReactive(data, key, data[key])\r\n        })\r\n    }\r\n\r\n    // 数组元素监测\r\n    observeArray(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            observe(data[i])\r\n        }\r\n    }\r\n}\r\n\r\n// 将一个对象定义成响应式（Object.defineProperty）\r\nexport function defineReactive(obj, key, value) {\r\n    // value可能是对象\r\n    observe(value)\r\n    Object.defineProperty(obj, key, {\r\n        get() {\r\n            return value;\r\n        },\r\n        set(newVal) {\r\n            if (newVal === value) {\r\n                return;\r\n            }\r\n            // 设置的值可能是对象\r\n            observe(newVal)\r\n            value = newVal;\r\n        }\r\n    })\r\n}\r\n\r\n// 观测数据，数据劫持\r\nexport function observe(data) {\r\n    // 如果不是对象的话，不管\r\n    if (typeof data !== 'object' || data === null) {\r\n        return;\r\n    }\r\n    // 如果数据有__ob__属性，说明被监测过了，不用再次监测\r\n    if (data.__ob__) {\r\n        return;\r\n    }\r\n    // 使用Observer类观测\r\n    return new Observer(data)\r\n\r\n}","import { observe } from \"./observer/index.js\";\r\n\r\n// 用于初始化状态，状态由很多种 props data methods computed watch\r\nexport function initState(vm) {\r\n  let options = vm.$options\r\n\r\n  // 初始化数据，数据劫持\r\n  if(options.data){\r\n      initData(vm)\r\n  }\r\n}\r\n\r\n// 将vm._data的数据代理的vm实例上，用户体验好\r\nfunction proxy(target, source, key){\r\n  Object.defineProperty(target, key, {\r\n    get(){\r\n      return target[source][key]\r\n    },\r\n    set(newValue){\r\n      target[source][key] = newValue;\r\n    }\r\n  })\r\n}\r\n\r\n// 初始化data数据\r\nfunction initData(vm) {\r\n    // 初始化数据，就是对数据的劫持\r\n    let data = vm.$options.data\r\n    // vm._data中保存着数据\r\n    data = vm._data = typeof data === 'function' ? data.call(vm): data;\r\n\r\n    // 用户看数据只能在vm._data上看，可以将vm._data上的数据代理到vm实例上，通过vm.xx访问数据\r\n    for(let key in data){\r\n       proxy(vm, '_data', key)\r\n    }\r\n\r\n    // 数据劫持，观测数据 data和vm._data是同一个引用\r\n    observe(data)\r\n\r\n}","import { compileToFunctions } from \"./compiler/index.js\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        \r\n        let vm = this;\r\n        vm.$options = options; // vm.$options保存的是用户传入的选项\r\n\r\n        //初始化状态有很多\r\n        initState(vm)\r\n\r\n\r\n        //编译模板，挂载到页面\r\n        if(vm.$options.el){\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        let options = vm.$options;\r\n        \r\n        // 获取el的dom节点\r\n        el = typeof el === 'string' ? document.querySelector(el) : el;\r\n        // vm.$options.el是真实dom节点\r\n        vm.$options.el = el;\r\n\r\n        // 查找模板的顺序：\r\n        // 如果有render函数，直接使用render函数\r\n        // 没有render  看看有没有template\r\n        // 没有template 就使用外部模板\r\n\r\n        // 使用模板编译成render函数\r\n        if(!options.render){\r\n            let template = options.template\r\n            if(!template){\r\n                template = el.outerHTML // 外部模板\r\n            }\r\n\r\n            //拿到模板，使用模板编译成render函数\r\n            const render =  compileToFunctions(template)\r\n            options.render = render;\r\n        }\r\n\r\n    }\r\n}","import { initMixin } from \"./init\";\r\n\r\n// Vue的入口文件\r\nfunction Vue (options){\r\n  this._init(options)  \r\n}\r\n\r\n// 混入的初始化方法\r\n// 原型模式，将原型的方法拆分到不同的文件中\r\ninitMixin(Vue)\r\n\r\n\r\nexport default Vue;"],"names":["ncname","qnameCapture","startTagOpen","RegExp","parseHTML","html","root","advance","n","substring","textEnd","indexOf","startTageMatch","match","console","log","length","tag","type","compileToFunctions","template","ast","oldArrayMethods","Array","prototype","methods","arrayMethods","Object","create","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","configurable","isArray","setPrototypeOf","walk","keys","key","defineReactive","i","observe","obj","get","set","newVal","initState","vm","options","$options","initData","proxy","target","source","newValue","_data","initMixin","Vue","_init","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}